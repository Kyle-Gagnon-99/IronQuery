version: '3.8'
services:
    rust-auth:
        build:
            context: ../rust-auth
            dockerfile: Dockerfile
        volumes:
            - ../rust-auth:/usr/src/rust-auth
            - cargo-cache:/usr/local/cargo/registry
        ports:
            - '65432:8080'

    rust-db:
        build:
            context: ../rust-db
            dockerfile: Dockerfile
        volumes:
            - ../rust-db:/usr/src/rust-db
            - cargo-cache:/usr/local/cargo/registry
        ports:
            - '65433:8080'

    rust-broker:
        build:
            context: ../rust-broker
            dockerfile: Dockerfile
        volumes:
            - ../rust-broker:/usr/src/rust-broker
            - cargo-cache:/usr/local/cargo/registry
        ports:
            - '65434:8080'

    db:
        image: postgres:latest
        command: -c config_file=/etc/postgresql.conf
        environment:
            POSTGRES_DB: ironquery
            POSTGRES_USER: admin
            POSTGRES_PASSWORD: password
        ports:
            - '54323:5432'
        volumes:
            - postgres-data:/var/lib/postgresql/data
            - ./postgres/pg_logs:/var/lib/postgresql/data/pg_logs
            - ./postgres/postgresql.conf:/etc/postgresql.conf
            - ./postgres/init-postgres.sh:/usr/local/bin/init-postgres.sh
        entrypoint: ['/usr/local/bin/init-postgres.sh']

    pgadmin:
        image: dpage/pgadmin4:latest
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@admin.com
            PGADMIN_DEFAULT_PASSWORD: password
        ports:
            - '5050:80'
        depends_on:
            - db

    kong:
        image: kong:latest
        environment:
            KONG_DATABASE: 'off'
            KONG_DECLARATIVE_CONFIG: /etc/kong/kong.yml
            KONG_PROXY_ACCESS_LOG: /dev/stdout
            KONG_ADMIN_ACCESS_LOG: /dev/stdout
            KONG_PROXY_ERROR_LOG: /dev/stderr
            KONG_ADMIN_ERROR_LOG: /dev/stderr
        volumes:
            - ./kong/kong.yml:/etc/kong/kong.yml
        ports:
            - '8000:8000'
            - '8443:8443'
            - '8001:8001'
            - '8444:8444'

    kong-dashboard:
        image: pantsel/konga
        environment:
            TOKEN_SECRET: somesecrettoken
        links:
            - kong:kong
        ports:
            - '1337:1337'

    redis:
        image: redis:latest
        ports:
            - '6379:6379'

    nextjs-dashboard:
        image: node:latest
        volumes:
            - ../nextjs-dashboard/dashboard:/usr/src/app
        working_dir: /usr/src/app
        command: npm run dev
        ports:
            - '3000:3000'

    # Logging
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
        container_name: elasticsearch
        environment:
            - discovery.type=single-node
        ports:
            - '9200:9200'
            - '9300:9300'
        volumes:
            - elasticsearch_data:/usr/share/elasticsearch/data

    logstash:
        image: docker.elastic.co/logstash/logstash:7.9.3
        container_name: logstash
        command: logstash -f /usr/share/logstash/pipeline/logstash.conf
        volumes:
            - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
            - ./postgres/pg_logs:/usr/share/logstash/pg_logs
        ports:
            - '5000:5000'
        links:
            - elasticsearch

    kibana:
        image: docker.elastic.co/kibana/kibana:7.9.3
        container_name: kibana
        ports:
            - '5601:5601'
        links:
            - elasticsearch

volumes:
    cargo-cache:
    postgres-data:
    elasticsearch_data:
